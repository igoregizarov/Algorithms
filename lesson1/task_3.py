"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

store = {
    'mag1': 5000,
    'mag2': 3000,
    'mag3': 50000,
    'mag4': 20000,
    'mag5': 1000,
    'mag6': 10000,
    'mag7': 7000,
    'mag8': 22000
}

new_store = store.copy()
print(new_store)


def max_3(dict_obj):
    total = {}
    while len(total) < 3:
        max_v = 0
        search_k = ''
        for k, v in dict_obj.items():
            if v > max_v:
                max_v = v
                search_k = k
        total.update({search_k: max_v})
        dict_obj.pop(search_k)
    return total


def new_max_3(dict_obj):
    pass


# print(max(new_store.values()))
# print(new_store.setdefault(50000))
print(max_3(new_store))

""" Сложность O(n^2) так как использовался цикл в цикле, 
уверен это не самое оптимальное решение, но других не нашел."""
